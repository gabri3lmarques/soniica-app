{"version":3,"sources":["accordion/accordion.js","flash-message/flash-message.js","profile-img/profile-img.js","playlist-modal/playlist-modal.js","player/player.js","song/song.js","top-menu/top-menu.js"],"names":["AccordionMenu","constructor","this","accordionItems","document","querySelectorAll","init","forEach","item","querySelector","addEventListener","currentItem","isActive","classList","contains","remove","style","maxHeight","add","content","scrollHeight","let","fm_close","modal","profilePictureForm","display","button","event","originalForm","currentTarget","closest","modalBody","modalBackground","modalCloseButton","clonedForm","cloneNode","innerHTML","appendChild","closeModal","removeEventListener","closeOnOutsideClick","e","target","setTimeout","removeProfilePicture","preventDefault","fileInput","formData","FormData","append","files","fetch","method","body","credentials","then","res","json","data","console","log","message","getElementById","textContent","confirm","src","Player","audio","Audio","currentSong","currentPlaylist","isPlaying","isLooping","isRandom","titleElement","artistElement","timeElement","gendersElement","thumbElement","playPauseButton","nextButton","previousButton","loopButton","randomButton","progressBarContainer","progressBar","volumeSlider","togglePlayPause","next","previous","toggleLoop","toggleRandom","updateProgressBar","handleSongEnd","adjustVolume","seek","startDrag","initializeFirstSong","volume","value","isPlayerDisabled","newVolume","rightVolume","leftVolume","background","firstPlaylist","firstSong","encodedUrl","dataset","decodedUrl","atob","startsWith","updatePlayerInfo","error","getRandomSong","randomSong","songs","Math","floor","random","length","getNextSong","currentIndex","findIndex","song","getPreviousSong","play","songElement","playlistElement","syncButtons","pause","playButton","nextSong","previousSong","currentTime","thumbSrc","progress","duration","width","rect","getBoundingClientRect","offsetX","clientX","left","dragHandler","stopDrag","handleDownload","wpApiSettings","root","headers","X-WP-Nonce","nonce","Content-Type","response","success","alert","is_premium","downloadLink","setAttribute","removeAttribute","catch","window","globalPlayer","playlist","playerDownloadButtons","isBase64","str","btoa","PlayerManager","instance","getInstance","stopGlobalPlayer","encodedDownloadLink","getAttribute","decodedLink","open","location","href","userAvatar","userSubMenu","toggle"],"mappings":"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","file":"main.min.js","sourcesContent":["class AccordionMenu {\r\n    constructor() {\r\n        this.accordionItems = document.querySelectorAll('.accordion-item');\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.accordionItems.forEach(item => {\r\n            const header = item.querySelector('.accordion-header');\r\n            \r\n            header.addEventListener('click', () => {\r\n                const currentItem = item;\r\n                const isActive = currentItem.classList.contains('active');\r\n                \r\n                // Fecha todos os itens\r\n                this.accordionItems.forEach(item => {\r\n                    item.classList.remove('active');\r\n                    const content = item.querySelector('.accordion-content');\r\n                    content.style.maxHeight = null;\r\n                });\r\n                \r\n                // Abre o item atual se não estava ativo\r\n                if (!isActive) {\r\n                    currentItem.classList.add('active');\r\n                    const content = currentItem.querySelector('.accordion-content');\r\n                    content.style.maxHeight = content.scrollHeight + \"px\";\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n// Inicializa o accordion quando o DOM estiver pronto\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    if (document.querySelector('.accordion-item')) {\r\n        new AccordionMenu();\r\n    }\r\n});","let fm_close = document.querySelector('.fm-close');\r\nlet modal = document.querySelector('.flash-message-overlay');\r\n\r\nif(fm_close ){\r\n    fm_close.addEventListener('click', function() {\r\n        modal.style.display = 'none';\r\n    });\r\n}\r\n","let profilePictureForm = document.querySelector(\"#profile-picture-form\");\r\nif(profilePictureForm) {\r\n    profilePictureForm.addEventListener(\"submit\", function (e) {\r\n        e.preventDefault();\r\n        const fileInput = document.querySelector('input[name=\"profile_picture\"]');\r\n        const formData = new FormData();\r\n        formData.append(\"action\", \"upload_profile_picture\");\r\n        formData.append(\"profile_picture\", fileInput.files[0]);\r\n        fetch(\"/wp-admin/admin-ajax.php\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n          credentials: \"same-origin\",\r\n        })\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            console.log(data.data?.message)\r\n            document.getElementById(\"upload-status\").textContent = data.data?.message;\r\n          });\r\n      });\r\n}\r\n\r\nlet removeProfilePicture = document.getElementById(\"remove-profile-picture\");\r\nif(removeProfilePicture) {\r\n  removeProfilePicture.addEventListener(\"click\", function () {\r\n    if (!confirm(\"Are you sure you want to remove your profile picture?\")) return;\r\n  \r\n    const formData = new FormData();\r\n    formData.append(\"action\", \"remove_profile_picture\");\r\n  \r\n    fetch(\"/wp-admin/admin-ajax.php\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n      credentials: \"same-origin\",\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        document.getElementById(\"upload-status\").textContent = data.data?.message || \"Erro ao remover imagem.\";\r\n        document.getElementById(\"profile-picture-preview\").src = \"\"; // ou uma imagem padrão\r\n      });\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n  ","document.querySelectorAll('.add-to-playlist-button').forEach(button => {\r\n  button.addEventListener('click', event => {\r\n    const songElement = event.currentTarget.closest('.song');\r\n    const originalForm = songElement.querySelector('.playlist-form');\r\n\r\n    const modal = document.querySelector('.playlist-modal');\r\n    const modalBody = document.querySelector('.playlist-modal-body');\r\n    const modalBackground = document.querySelector('.playlist-modal-background');\r\n    const modalCloseButton = document.querySelector('.playlist-modal-close');\r\n\r\n    if (originalForm && modalBody && modalBackground) {\r\n      const clonedForm = originalForm.cloneNode(true); // clona o formulário inteiro\r\n\r\n      modalBody.innerHTML = ''; // limpa conteúdo anterior\r\n      modalBody.appendChild(clonedForm); // insere o clone\r\n      modalBackground.classList.add('active');\r\n\r\n      // Função de fechar modal\r\n      const closeModal = () => {\r\n        modalBackground.classList.remove('active');\r\n        document.removeEventListener('click', closeOnOutsideClick);\r\n        if (modalCloseButton) {\r\n          modalCloseButton.removeEventListener('click', closeModal);\r\n        }\r\n      };\r\n\r\n      // Fechar ao clicar fora do modal\r\n      const closeOnOutsideClick = (e) => {\r\n        if (!modal.contains(e.target)) {\r\n          closeModal();\r\n        }\r\n      };\r\n\r\n      // Espera para evitar conflito com o clique atual\r\n      setTimeout(() => {\r\n        document.addEventListener('click', closeOnOutsideClick);\r\n      }, 10);\r\n\r\n      // Fechar ao clicar no botão \"X\"\r\n      if (modalCloseButton) {\r\n        modalCloseButton.addEventListener('click', closeModal);\r\n      }\r\n    }\r\n  });\r\n});\r\n","class Player {\r\n    constructor() {\r\n        this.audio = new Audio();\r\n        this.currentSong = null;\r\n        this.currentPlaylist = null;\r\n        this.isPlaying = false;\r\n        this.isLooping = false; // Estado do loop\r\n        this.isRandom = false; // Estado do random\r\n        // Elementos do player principal\r\n        this.titleElement = document.querySelector('.current-title');\r\n        this.artistElement = document.querySelector('.current-artist');\r\n        this.timeElement = document.querySelector('.current-time');\r\n        this.gendersElement = document.querySelector('.current-genders');\r\n        this.thumbElement = document.querySelector('.current-thumb');\r\n        this.playPauseButton = document.querySelector('.play-pause');\r\n        this.nextButton = document.querySelector('.next');\r\n        this.previousButton = document.querySelector('.previous');\r\n        this.loopButton = document.querySelector('.loop');\r\n        this.randomButton = document.querySelector('.random'); // Botão de random\r\n        this.progressBarContainer = document.querySelector('.progress-bar-container');\r\n        this.progressBar = document.querySelector('.progress-bar');\r\n        this.volumeSlider = document.querySelector('#volume-slider'); // Slider de volume\r\n        // Event listeners\r\n        this.playPauseButton.addEventListener('click', () => this.togglePlayPause());\r\n        this.nextButton.addEventListener('click', () => this.next());\r\n        this.previousButton.addEventListener('click', () => this.previous());\r\n        this.loopButton.addEventListener('click', () => this.toggleLoop());\r\n        this.randomButton.addEventListener('click', () => this.toggleRandom());\r\n        this.audio.addEventListener('timeupdate', () => this.updateProgressBar());\r\n        this.audio.addEventListener('ended', () => this.handleSongEnd());\r\n        this.volumeSlider.addEventListener('input', (e) => this.adjustVolume(e));\r\n        // Eventos para a barra de progresso\r\n        this.progressBarContainer.addEventListener('click', (e) => this.seek(e));\r\n        this.progressBarContainer.addEventListener('mousedown', (e) => this.startDrag(e));\r\n        // Inicializar a primeira música automaticamente\r\n        this.initializeFirstSong();\r\n        this.audio.volume = this.volumeSlider.value;\r\n    }\r\n    isPlayerDisabled() {\r\n        return document.querySelector('#player-main')?.classList.contains('disabled');\r\n    }\r\n    adjustVolume(event) {\r\n        // Ajustar o volume do elemento de áudio com base no slider\r\n        const newVolume = event.target.value;\r\n        const rightVolume = newVolume * 100;\r\n        const leftVolume = 100 - rightVolume;\r\n        this.audio.volume = newVolume;\r\n        this.volumeSlider.style.background = `linear-gradient(to right, #708303, #e9ff70 ${rightVolume}%, #272727 ${leftVolume}%)`;\r\n    }\r\n    initializeFirstSong() {\r\n        const firstPlaylist = document.querySelector('.playlist');\r\n        if (!firstPlaylist) return;\r\n        const firstSong = firstPlaylist.querySelector('.song');\r\n        if (!firstSong) return;\r\n        this.currentPlaylist = firstPlaylist;\r\n        this.currentSong = firstSong;\r\n        // Fix: songElement was undefined, should use firstSong\r\n        const encodedUrl = firstSong.dataset.src;\r\n        try {\r\n            const decodedUrl = atob(encodedUrl);\r\n            if (!decodedUrl.startsWith('http://') && !decodedUrl.startsWith('https://')) {\r\n                console.error('Invalid decoded URL:', decodedUrl);\r\n                return;\r\n            }\r\n            this.audio.src = decodedUrl;\r\n            this.updatePlayerInfo(firstSong);\r\n        } catch (e) {\r\n            console.error('Error decoding URL:', e);\r\n        }\r\n    }\r\n    toggleRandom() {\r\n        if(this.isPlayerDisabled()){\r\n            return\r\n        }\r\n        this.isRandom = !this.isRandom;\r\n        // Adicionar ou remover a classe 'active' no botão random\r\n        if (this.isRandom) {\r\n            this.randomButton.classList.add('active');\r\n        } else {\r\n            this.randomButton.classList.remove('active');\r\n        }\r\n    }\r\n    getRandomSong() {\r\n                if(this.isPlayerDisabled()){\r\n            return\r\n        }\r\n        let randomSong;\r\n        do {\r\n            randomSong = songs[Math.floor(Math.random() * songs.length)];\r\n        } while (randomSong === this.currentSong && songs.length > 1);\r\n        return randomSong;\r\n    }\r\n    getNextSong() {\r\n        if (this.isRandom) {\r\n            return this.getRandomSong();\r\n        }\r\n        const songs = [...this.currentPlaylist.querySelectorAll('.song')];\r\n        const currentIndex = songs.findIndex(song => song === this.currentSong);\r\n        return songs[currentIndex + 1] || (this.isLooping ? songs[0] : null);\r\n    }\r\n    getPreviousSong() {\r\n        const songs = [...this.currentPlaylist.querySelectorAll('.song')];\r\n        const currentIndex = songs.findIndex(song => song === this.currentSong);\r\n        return songs[currentIndex - 1] || (this.isLooping ? songs[songs.length - 1] : null);\r\n    }\r\n    play(songElement, playlistElement) {\r\n        if(this.isPlayerDisabled()){\r\n            return\r\n        }\r\n        try {\r\n            const encodedUrl = songElement.dataset.src;\r\n            const decodedUrl = atob(encodedUrl);\r\n            if (!decodedUrl.startsWith('http://') && !decodedUrl.startsWith('https://')) {\r\n                console.error('Invalid decoded URL:', decodedUrl);\r\n                return;\r\n            }\r\n            if (this.currentSong && this.currentSong !== songElement) {\r\n                this.currentSong.querySelector('.play-button').classList.remove('active');\r\n                this.currentSong.classList.remove('active');\r\n            }\r\n            if (this.audio.src !== decodedUrl) {\r\n                this.audio.src = decodedUrl;\r\n            }\r\n            this.audio.play();\r\n            this.isPlaying = true;\r\n            this.currentSong = songElement;\r\n            this.currentPlaylist = playlistElement;\r\n            this.updatePlayerInfo(songElement);\r\n            this.syncButtons(songElement);\r\n\r\n        } catch (e) {\r\n            console.error('Error playing song:', e);\r\n        }\r\n    }\r\n    pause(songElement = null) {\r\n        this.audio.pause();\r\n        this.isPlaying = false;\r\n        if (songElement) {\r\n            const playButton = songElement.querySelector('.play-button');\r\n            if (playButton) playButton.classList.remove('active');\r\n            songElement.classList.remove('active');\r\n        }\r\n        this.playPauseButton.classList.remove('active');\r\n    }\r\n    togglePlayPause() {\r\n        if(this.isPlayerDisabled()){\r\n            return\r\n        }\r\n        if (this.isPlaying) {\r\n            this.pause(this.currentSong);\r\n        } else {\r\n            this.audio.play();\r\n            this.isPlaying = true;\r\n            this.currentSong.querySelector('.play-button').classList.add('active');\r\n            this.currentSong.classList.add('active');\r\n            this.playPauseButton.classList.add('active');\r\n        }\r\n    }\r\n    toggleLoop() {\r\n        if(this.isPlayerDisabled()){\r\n            return\r\n        }\r\n        this.isLooping = !this.isLooping;\r\n        if (this.isLooping) {\r\n            this.loopButton.classList.add('active');\r\n        } else {\r\n            this.loopButton.classList.remove('active');\r\n        }\r\n    }\r\n    next() {\r\n        if(this.isPlayerDisabled()){\r\n            return\r\n        }\r\n        const nextSong = this.getNextSong();\r\n        if (nextSong) {\r\n            this.play(nextSong, this.currentPlaylist);\r\n        }\r\n    }\r\n    previous() {\r\n        if(this.isPlayerDisabled()){\r\n            return\r\n        }\r\n        if (this.audio.currentTime > 2) {\r\n            this.audio.currentTime = 0;\r\n        } else {\r\n            const previousSong = this.getPreviousSong();\r\n            if (previousSong) {\r\n                this.play(previousSong, this.currentPlaylist);\r\n            }\r\n        }\r\n    }\r\n    handleSongEnd() {\r\n        const nextSong = this.getNextSong();\r\n        if (nextSong) {\r\n            this.play(nextSong, this.currentPlaylist);\r\n        } else {\r\n            this.isPlaying = false;\r\n            this.audio.currentTime = 0;\r\n            this.syncButtons(null);\r\n        }\r\n    }\r\n    updatePlayerInfo(songElement) {\r\n        this.titleElement.textContent = songElement.querySelector('.title').textContent;\r\n        this.artistElement.textContent = songElement.querySelector('.artist').textContent;\r\n        this.timeElement.textContent = songElement.querySelector('.time').textContent;\r\n        //const genders = [...songElement.querySelectorAll('.genders li')].map(li => li.textContent);\r\n        //this.gendersElement.textContent = genders.join(', ');\r\n        const thumbSrc = songElement.querySelector('.thumb').src;\r\n        this.thumbElement.src = thumbSrc;\r\n    }\r\n    syncButtons(songElement) {\r\n        document.querySelectorAll('.play-button').forEach(button => button.classList.remove('active'));\r\n        document.querySelectorAll('.song').forEach(song => song.classList.remove('active'));\r\n\r\n        if (songElement) {\r\n            songElement.querySelector('.play-button').classList.add('active');\r\n            songElement.classList.add('active');\r\n            this.playPauseButton.classList.add('active');\r\n        } else {\r\n            this.playPauseButton.classList.remove('active');\r\n        }\r\n    }\r\n    updateProgressBar() {\r\n        const progress = (this.audio.currentTime / this.audio.duration) * 100;\r\n        this.progressBar.style.width = `${progress}%`;\r\n    }\r\n    seek(event) {\r\n        const rect = this.progressBarContainer.getBoundingClientRect();\r\n        const offsetX = event.clientX - rect.left;\r\n        const percentage = offsetX / rect.width;\r\n        this.audio.currentTime = percentage * this.audio.duration;\r\n    }\r\n    startDrag(event) {\r\n        const dragHandler = (e) => this.seek(e);\r\n        const stopDrag = () => {\r\n            document.removeEventListener('mousemove', dragHandler);\r\n            document.removeEventListener('mouseup', stopDrag);\r\n        };\r\n        document.addEventListener('mousemove', dragHandler);\r\n        document.addEventListener('mouseup', stopDrag);\r\n\r\n        this.seek(event);\r\n    }\r\n}    \r\n// Inicializar o player apenas se o elemento existir\r\nif (document.querySelector('#player-main')) {\r\n    \r\n    window.globalPlayer = new Player(); // Define como global\r\n\r\n    // Configurar eventos para as músicas\r\n    document.addEventListener('click', (event) => {\r\n        const playButton = event.target.closest('.play-button');\r\n        if (!playButton) return;\r\n\r\n        const song = playButton.closest('.song');\r\n        const playlist = playButton.closest('.playlist');\r\n        \r\n        if (!song || !playlist) return;\r\n\r\n        if (globalPlayer.currentSong === song && globalPlayer.isPlaying) {\r\n            globalPlayer.pause(song);\r\n        } else {\r\n            globalPlayer.play(song, playlist);\r\n        }\r\n    });\r\n}\r\n","function handleDownload(event) {\r\n    fetch(`${wpApiSettings.root}soniica/v1/register-download`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'X-WP-Nonce': wpApiSettings.nonce,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        if (!data.success) {\r\n            event.preventDefault();\r\n            alert(data.message);\r\n            return false;\r\n        } else {\r\n            // Atualiza o estado de todos os botões de download para usuários não premium\r\n            if (!data.is_premium) {\r\n                document.querySelectorAll('.download-link').forEach(downloadLink => {\r\n                    downloadLink.classList.add('download-blocked');\r\n                    downloadLink.setAttribute('title', 'You have reached the download limit on free plan today.');\r\n                    //downloadLink.textContent = 'Download indisponível';\r\n                    downloadLink.setAttribute('href', '/get-premium');\r\n                    downloadLink.removeAttribute('download');\r\n                });\r\n            }\r\n        }\r\n    })\r\n    .catch(error => {\r\n        console.error('Erro:', error);\r\n        event.preventDefault();\r\n        return false;\r\n    });\r\n\r\n    return true;\r\n}\r\n\r\nconst playerDownloadButtons = document.querySelectorAll('.download-link');\r\n\r\nfunction isBase64(str) {\r\n    try {\r\n        return btoa(atob(str)) === str;\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n}\r\n\r\nconst PlayerManager = (function () {\r\n    let instance = null;\r\n\r\n    return {\r\n        getInstance: function () {\r\n            if (!instance) {\r\n                instance = new Player();\r\n            }\r\n            return instance;\r\n        }\r\n    };\r\n})();\r\n\r\nfunction stopGlobalPlayer() {\r\n    if (window.globalPlayer && window.globalPlayer.currentSong) {\r\n        window.globalPlayer.pause(window.globalPlayer.currentSong);\r\n    }\r\n}\r\n\r\n\r\n\r\nplayerDownloadButtons.forEach((button) => {\r\n    button.addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n\r\n        let encodedDownloadLink = button.getAttribute(\"href\");\r\n        let decodedLink = '';\r\n\r\n        // Verifica se a string é Base64 válida antes de decodificar\r\n        if (isBase64(encodedDownloadLink)) {\r\n            // se for base64, decodifica\r\n            decodedLink = atob(encodedDownloadLink);\r\n        } else {\r\n            // se não for, usa o link normal\r\n            decodedLink = encodedDownloadLink;\r\n \r\n            window.location.href = decodedLink;\r\n            return;\r\n        }\r\n\r\n        if (!button.classList.contains('download-blocked')) {\r\n            window.open(decodedLink, '_blank');\r\n        } else {\r\n            console.log('deu ruim');\r\n        }\r\n    });\r\n});\r\n\r\nwindow.addEventListener('beforeunload', function(event) {\r\n    stopGlobalPlayer();\r\n});\r\n","\r\n    const userAvatar = document.querySelector(\".user-avatar\");\r\n    const userSubMenu = document.querySelector(\".user-sub-menu\");\r\n\r\n    if (userAvatar && userSubMenu) {\r\n        userAvatar.addEventListener(\"click\", function (event) {\r\n            userSubMenu.classList.toggle(\"active\");\r\n        });\r\n\r\n        document.addEventListener(\"click\", function (event) {\r\n            if (!userAvatar.contains(event.target) && !userSubMenu.contains(event.target)) {\r\n                userSubMenu.classList.remove(\"active\");\r\n            }\r\n        });\r\n    }\r\n"]}